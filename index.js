// DATA & CONFIG
let themeMode = "light";
let isDarkMode = themeMode === "dark";
//     L·ª£i √≠ch khi b·∫°n tham gia kh√≥a Entry-level: Hi·ªÉu ƒë·ªÉ s·ª≠ d·ª•ng to√°n trong t·∫•t c·∫£ ng√†nh ngh·ªÅ (t√†i ch√≠nh, marketing, blockchain, qu·ªπ ƒë·∫ßu t∆∞ cho ƒë·∫øn AI). b·∫°n c√≤n bi·∫øt v·ªÅ d·ªØ li·ªáu ƒë·ªÉ khai th√°c th√¥ng tin d·ªØ li·ªáu m·ªôt c√°ch h·ª£p l√Ω. (d·ªØ li·ªáu l√† m·ªè v√†ng)
/* <li class="text-base">
<ul class="list-inside list-disc"><b>Part 2: D·ªØ li·ªáu v√† x·ª≠ l√Ω d·ªØ li·ªáu</b>
    <li>Distribution</li>
    <li>Ph√¢n T√≠ch</li>
    <li>S·ª≠ d·ª•ng python ƒë·ªÉ  ph√¢n t√≠ch d·ªØ li·ªáu</li>
</ul>
// </li> */
const rawData = {
    content1: ` 
    <p class="text-red-500 text-left ext-xl font-bold text-gray-900 dark:text-white">B·∫†N S·∫º ƒê∆Ø·ª¢C:</p>
    <ul class="list-disc text-left">
        <li class="text-base">Thay v√¨ ch·ªâ l√Ω thuy·∫øt, d√πng to√°n ƒë·ªÉ ·ª©ng d·ª•ng trong m·ªçi ng√†nh ngh·ªÅ, t·ª´ <strong>e-commerce, fintech, marketing, blockchain, ƒë·∫ßu t∆∞ ch·ª©ng kho√°n</strong> cho ƒë·∫øn <strong>AI</strong>.</li>
        <li class="text-base">Bi·∫øt th·∫ø n√†o khai th√°c d·ªØ li·ªáu m·ªôt c√°ch hi·ªáu qu·∫£ v√¨ d·ªØ li·ªáu l√† "m·ªè v√†ng".</li>
        <li class="text-base"><div class="font-semibold text-red-500 inline">Gi·∫£m 10%</div> khi ƒëƒÉng k√≠ kh√≥a ti·∫øp theo.</li>
        <li class="text-base"><div class="font-semibold text-red-500 inline">Nh·∫≠n 8% affiliates</div> v·ªõi m·ªói l∆∞·ª£t gi·ªõi thi·ªáu th√†nh c√¥ng.</li>
    </ul>

    <ul class="list-disc text-left">
        <li class="text-base"><b>Ki·∫øn th·ª©c bao g·ªìm: </b>
            <ul class="list-inside list-disc">
                <li>ƒêaÃ£i s√¥ÃÅ tuy√™ÃÅn tiÃÅnh/Ma tr√¢Ã£n</li>
                <li>GiaÃâi tiÃÅch</li>
                <li>XaÃÅc su√¢ÃÅt v√† th·ªëng k√™</li>
                <li>Distribution</li>
                <li>Ph√¢n T√≠ch</li>
                <li>L·∫≠p tr√¨nh</li>
                <li>S·ª≠ d·ª•ng python ƒë·ªÉ ph√¢n t√≠ch d·ªØ li·ªáu</li>
                <li>X·ª≠ l√Ω Big Data trong c√°c b√†i to√°n doanh nghi·ªáp</li>
            </ul>
        </li>
    </ul>
    `,
    content2:
        `
    <p class="text-red-500 text-left ext-xl font-bold text-gray-900 dark:text-white">B·∫†N S·∫º ƒê∆Ø·ª¢C:</p>
    <ul class="list-disc text-left">
        <li class="text-base">X√¢y d·ª±ng profile b·∫±ng d·ª± √°n th·ª±c t·∫ø</li>
        <li class="text-base">Bi·∫øt c√°ch d·∫°y v√† t·ªëi ∆∞u t·∫•t c·∫£ c√°c lo·∫°i AI, kh√¥ng ch·ªâ s·ª≠ d·ª•ng c√¢u l·ªánh prompt.</li>
        <li class="text-base"><div class="font-semibold text-red-500 inline">Gi·∫£m 10%</div> khi ƒëƒÉng k√≠ kh√≥a ti·∫øp theo.</li>
        <li class="text-base"><div class="font-semibold text-red-500 inline">Nh·∫≠n 8% affiliates</div> v·ªõi m·ªói l∆∞·ª£t gi·ªõi thi·ªáu th√†nh c√¥ng.</li>
        </ul>

    <ul class="list-disc text-left">
        <li class="text-base"><b>Part 1: Advanced Machine Learning & Feature engineering</b>
            <ul class="list-inside list-disc">
            <li>Thu th·∫≠p v√† khai th√°c d·ªØ li·ªáu b·∫±ng python</li>
            <li>Hu·∫©n luy·ªán cho machine learning models</li>
            <li>S·ª≠ d·ª•ng AI trong t√†i ch√≠nh (ƒë·∫ßu t∆∞)</li>
            </ul>
        </li>
    </ul>

    <ul class="list-disc text-left">
        <li class="text-base"><b>Part 2: Deep Learning & Computer Vision</b>
            <ul class="list-inside list-disc">
            <li>Transformer</li>
            <li>Training AI models</li>
            <li>Finetune models v·ªõi m·ª•c ƒë√≠ch c·ª• th·ªÉ c·ªßa doanh nghi·ªáp</li>
            </ul>
        </li>
    </ul>

    <ul class="list-disc text-left">
        <li class="text-base"><b>Part 3: LLM & GenAI</b>
            <ul class="list-inside list-disc">
                <li>X·ª≠ l√Ω ng√¥n ng·ªØ t·ª± nhi√™n (LLM)</li>
                <li>Thu·∫≠t to√°n c·ªßa GenAI trong Midjourney v√† ChatGPT.</li>
                <li>H·ªçc c√°ch tinh ch·ªânh LLMs v√† ·ª©ng d·ª•ng cho c√° nh√¢n v√† doanh nghi·ªáp.</li>
            </ul>
        </li>
    </ul>

    `,
    content3: `
    <p class="text-red-500 text-left ext-xl font-bold text-gray-900 dark:text-white">B·∫†N S·∫º ƒê∆Ø·ª¢C:</p>
    <ul class="list-disc text-left">
        <li class="text-base">ƒê∆∞·ª£c h·ªçc ƒë·ªçc v√† c√°ch nghi√™n c·ª©u b√†i b√°o khoa h·ªçc top h√†ng ƒë·∫ßu th·∫ø gi·ªõi </li>
        <li class="text-base">ƒê∆∞·ª£c r√®n luy·ªán k·ªπ nƒÉng nh∆∞ m·ªôt AI Researcher.</li>
        <li class="text-base">Luy·ªán t∆∞ duy startup nh∆∞ DeepSeek.</li>
        <li class="text-base"><div class="font-semibold text-red-500 inline">Nh·∫≠n 8% affiliates</div> v·ªõi m·ªói l∆∞·ª£t gi·ªõi thi·ªáu th√†nh c√¥ng.</li>
    </ul>


    <ul class="list-disc text-left">
        <li class="text-base"><b>Become a Researcher: </b>
            <ul class="list-inside list-disc">
                <li>Chi ti·∫øt li√™n h·ªá qua mail: <a href="mailto:bradduy95@gmail.com" class="text-blue-500 underline">üìÆ: bradduy95@gmail.com</a>
            </li>
            </ul>
        </li>
    </ul>
    
    `

}

const [popupContent1, popupContent2, popupContent3] = Object.keys(rawData).map((k) => {
    return `
        <div class="px-8">
            ${rawData[k]}
        </div>
    `
});


const purposeIDs = {
    purpose1: {
        id: "purpose1",
        content: popupContent1
    },
    purpose2: { id: "purpose2", content: popupContent2 },
    purpose3: { id: "purpose3", content: popupContent3 },
}

const baseConfig = {
    // fixedHeight: true,
    // heightMultiplier: 0.8,
    // height: "600px"
}

let popupConfig = {
    backgroundColor: "var(--text)",
    textColor: "var(--primary)",
    titleColor: "var(--primary)",
    closeColor: "var(--primary-foreground)",
    ...baseConfig
};


const popupTitle_entry = `<p class="text-xl">D√†nh cho Entry-level</>
  <hr class="h-[1.5px] w-full my-4 mx-auto bg-divider opacity-35 border-none" />`;

const popupTitle_engineer = `<p class="text-xl">Kh√≥a tr·ªü th√†nh AI Engineer</>
  <hr class="h-[1.5px] w-full my-4 mx-auto bg-divider opacity-35 border-none" />`;

const popupTitle_researcher = `<p class="text-xl">Kh√≥a tr·ªü th√†nh AI Researcher</>
  <hr class="h-[1.5px] w-full my-4 mx-auto bg-divider opacity-35 border-none" />`;

// QUERY ELEMENTS
const purpose1 = document.getElementById(purposeIDs.purpose1.id);
const purpose2 = document.getElementById(purposeIDs.purpose2.id);
const purpose3 = document.getElementById(purposeIDs.purpose3.id);
const methodElm = document.getElementById("method");
const toggleModeElm = document.getElementById("change-mode");
const headerBgElm = document.getElementById("header-bg");
const targetBgElm = document.getElementById("target-bg");
const themeIconElm = document.getElementById("theme-icon");
const popupBodyElms = document.getElementsByClassName("popup-body");
const popupContentElms = document.getElementsByClassName("popup-content");


// EVENT TRIGGER
const configPopupStyle = () => {
    const bodyElmArr = popupBodyElms ? Array.from(popupBodyElms) : [];
    const contentElmArr = popupContentElms ? Array.from(popupContentElms) : [];

    if (bodyElmArr.length) {
        bodyElmArr.forEach((elm) => elm.classList.add("overflow-x-auto"))
    }

    if (contentElmArr.length) {
        contentElmArr.forEach((elm) => elm.classList.add("max-h-[350px]", "lg:max-h-[600px]"))
    }
}

purpose1 && purpose1.addEventListener('click', () => {
    const purpose1Popup = new Popup({
        id: purposeIDs.purpose1.id,
        title: popupTitle_entry,
        content: purposeIDs.purpose1.content,
        ...popupConfig,
    });

    purpose1Popup.show();
    configPopupStyle();
});

purpose2 && purpose2.addEventListener('click', () => {
    const purpose2Popup = new Popup({
        id: purposeIDs.purpose2.id,
        title: popupTitle_engineer,
        content: purposeIDs.purpose2.content,
        ...popupConfig,
    });

    purpose2Popup.show();
    configPopupStyle();
});

purpose3 && purpose3.addEventListener('click', () => {
    const purpose3Popup = new Popup({
        id: purposeIDs.purpose3.id,
        title: popupTitle_researcher,
        content: purposeIDs.purpose3.content,
        ...popupConfig,
    });

    purpose3Popup.show();
    configPopupStyle();
});


document.addEventListener("DOMContentLoaded", () => {
    const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {

            if (!methodElm) return;

            if (entry.isIntersecting) {
                entry.target && entry.target.classList.add(`animate-fade-in`);
                entry.target && entry.target.classList.remove(`opacity-0`);
                observer.unobserve(entry.target);
            }
        });
    }, {
        threshold: 0.2
    });


    document.querySelectorAll('.fade-in-content').forEach(element => {
        observer.observe(element);
    });
});

const changeDarkMode = () => {
    themeMode = "dark";
    document.documentElement.classList.add("dark");
    headerBgElm && headerBgElm.setAttribute("src", "./images/dark_header_bg.jpg");
    targetBgElm && targetBgElm.setAttribute("src", "./images/dark_target_bg.jpg")
    themeIconElm && themeIconElm.setAttribute("src", "./images/sun-icon.svg");

    popupConfig = {
        backgroundColor: "var(--primary-foreground)",
        textColor: "var(--text)",
        titleColor: "var(--text)",
        closeColor: "var(--gray)",
    };
}

const changeLightMode = () => {
    themeMode = "light";
    document.documentElement.classList.remove("dark");
    headerBgElm && headerBgElm.setAttribute("src", "./images/light_header_bg.jpg");
    targetBgElm && targetBgElm.setAttribute("src", "./images/light_target_bg.jpg");
    themeIconElm && themeIconElm.setAttribute("src", "./images/moon-icon.svg");


    popupConfig = {
        backgroundColor: "var(--text)",
        textColor: "var(--primary)",
        titleColor: "var(--primary)",
        closeColor: "var(--primary-foreground)",
    };

}

toggleModeElm && toggleModeElm.addEventListener('click', () => {
    themeMode === "dark" ? changeLightMode() : changeDarkMode();
});


